{"components":[],"localdatasheet":[{"id":37,"name":"Writing_DT","isDynamicData":false,"dataIterationCount":null},[{"id":10,"datasheetId":37,"name":"DT_XYZ","isDynamicDataColumn":null,"values":null}],[{"Skip":"0","Iteration":"1","10":"12"},{"Skip":"0","Iteration":"2","10":"13"}]],"customActions":[{"id":33,"name":"Writing_DT","description":null,"code":"////<Mandatory_libraries>\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.InvalidElementStateException;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.Keys;\nimport org.openqa.selenium.NoSuchElementException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.ie.InternetExplorerDriver;\nimport org.openqa.selenium.interactions.Action;\nimport org.openqa.selenium.interactions.Actions;\nimport org.openqa.selenium.remote.CapabilityType;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.Select;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport stmJava.ActionResult;\nimport stmJava.CustomStep;\n//</Mandatory_libraries>\n//Additional libraries might be declared here\n\n//<This_lines_must_not_be_modified>\npublic class Writing_DT extends ActionResult {\n\t/// <summary>\n\t/// A method to perform a custom test step\n\t/// </summary>\n\t/// <param>The method receive parameters:\n\t/// driver which is an instance of IWebDriver\n\t/// and a second optional parameter which can be a String or a String[] array.\n\t/// One Parameter : public ActionResult Execute(WebDriver driver)\n\t/// Two Parameters: public ActionResult Execute(WebDriver driver, String\n\t/// inputValue)\n\t/// or: public ActionResult Execute(WebDriver driver, String[]\n\t/// inputValue)</param>\n\t/// <returns>The method returns an ActionResult object which is expected to\n\t/// contain the step\n\t/// execution information, such as the status (true or false equivalent to pass\n\t/// or fail), details\n\t/// that may explain the fail cause or some extra information and the path to\n\t/// find the file resulting\n\t/// of a screenshot.</returns>\n\t/// Also it is possible to save a String value to Datasheet.\n\t/// actionResult.columnName = \"DatasheetColumnName\";\n\t/// actionResult.propertyValue = \"Value to be saved\";\n\t/// Or save several values to Datasheet.\n\t/// actionResult.ColumnNames.Add('DatasheetColumnName1');\n\t/// actionResult.PropertyValues.Add(Value to be saved1);\n\t/// actionResult.ColumnNames.Add('DatasheetColumnNameN');\n\t/// actionResult.PropertyValues.Add(Value to be savedN);\n\t// </This_lines_must_not_be_modified>\n\t// <Mandatory_lines>\n\tpublic ActionResult Execute(WebDriver driver, String inputValue) {\n\t\tActionResult actionResult = new ActionResult();\n\t\tactionResult.status = false;\n\t\tactionResult.comments = \"\";\n\t\t// </Mandatory_lines>\n\t\t/////////////// WORKSPACE START////////////////////////////////////////////////////////////////////////////////////////\n\t\t\tCustomStep step1 = new CustomStep(actionResult);\n\ttry {\n\t  //Insert the step Logic\n\t  //step1.Screenshot(driver, \"<FILE_NAME>\");\n        int numberToIncrementByOne = Integer.parseInt(inputValue);\n            numberToIncrementByOne = numberToIncrementByOne+2;\n            \n            actionResult.columnName = \"DT_XYZ\";\n             actionResult.propertyValue = String.valueOf(numberToIncrementByOne) ;\n\n              actionResult.ColumnNames.add(\"DT_JournalBatchNumber_2\");\t\n     actionResult.PropertyValues.add( \"Value DT_2\" + numberToIncrementByOne);\n       actionResult.ColumnNames.add(\"DT_JournalBatchNumber_4\");\t\n     actionResult.PropertyValues.add( \"DT_4\"  + numberToIncrementByOne);\n\n\t  step1.status = true;\n\t  step1.comments = \"\";\n\t} catch (Exception ex) {\n\t  step1.status = false;\n\t  step1.comments = ex.getMessage();\n\t}\n\n\t\t\n\t\t\n\t\t\n\t\t\n\n\t\t/////////////// WORKSPACE END////////////////////////////////////////////////////////////////////////////////////////\n\t\t// </Mandatory_lines>\n\t\t// Return results in ActionResult object\n\t\treturn actionResult;\n\t}\n}\n//</Mandatory_lines>","folderId":11,"type":1,"uuid":"904d176f-ebc6-4f26-8b53-6992a9076de9","originalProjectId":0}],"testcase":{"id":37,"name":"Writing_DT","aut":"","description":null,"testFolderId":11,"dataSheetId":37,"statusKey":"NEW","isMobile":false,"testCaseType":1,"isExecutable":null,"steps":[{"id":77,"testCaseId":37,"stepNumber":1,"description":"Writing_DT","locatorType":null,"locator":null,"iosLocatorType":null,"iosLocator":null,"staAction":{"id":1,"name":"CUSTOM"},"value":"GDT_XYZ","componentId":null,"customActionId":33,"screenshot":false,"stepSection":null,"objectDictionary":null,"skipStep":false,"userSays":null,"botSays":null,"parameters":[],"migActionName":null,"migLocTypeName":null,"migLocTypeValue":null,"migObjDicPageName":null,"migObjName":null,"migDescription":null,"bddObjectIds":null,"parameterValues":null,"component":null,"waitForCondition":null,"timeOutWaitForCondition":0}],"testFolderName":null,"projectId":null,"scenario":null,"linkedSheetName":null,"linkedExcelFilePath":null,"isExcelLinked":false,"domainId":null,"uuid":"86783198-cbe1-417d-bc4e-049e1a59d49d"}}